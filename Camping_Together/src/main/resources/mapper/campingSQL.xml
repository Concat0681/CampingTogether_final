<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="camping">
	<select id="selectCampingListData" parameterType="map" resultType="c">
		select * from
			(select 
				rownum as rnum, 
				c.*,
				(select avg(camping_review_rating) from camping_review join camping using(camping_no) where camping_no = c.campingNo ) as avgReviewRating,
				(select max(camping_room_price) from camping_room join camping using(camping_no) where camping_no = c.campingNo) as maxRoomPrice
			from
				(select 
					camping_no as campingNo,
					member_id as memberId,
					camping_title as campingTitle,
					camping_content as campingContent,
					camping_addr as campingAddr,
					camping_addr_detail as campingAddrDetail,
					camping_phone as campingPhone
				from camping)c
			left join camping_provide p on (p.camping_no = c.campingNo) left join camping_room r on (r.camping_no = c.campingNo)
				<trim prefix="where" prefixOverrides="and|or">
					<if test="campingEtc != null">
						p.camping_etc in
						<foreach collection="campingEtc" item="etc" open="(" close=")" separator=",">
							 #{etc}
						</foreach>
					</if>
					<if test="campingRoomService != null">
						and p.camping_room_service in
						<foreach collection="campingRoomService" item="room" open="(" close=")" separator=",">
							 #{room}
						</foreach>
					</if>
					<if test="campingService != null">
						and p.camping_service in
						<foreach collection="campingService" item="service" open="(" close=")" separator=",">
							 #{service}
						</foreach>
					</if>
					<if test="campingRoomType != null">
						and r.camping_room_type in
						<foreach collection="campingRoomType" item="type" open="(" close=")" separator=",">
							 #{type}
						</foreach>
					</if>
					<if test="pplCount != 0">
						and r.camping_room_max_ppl_count <![CDATA[ >= ]]> #{pplCount}
					</if>
				</trim>
			<choose>
				<when test="order.equals('avgReviewRating')">
					order by avgReviewRating desc)
				</when>
				<when test="order.equals('maxRoomPrice')">
					order by maxRoomPrice desc)
				</when>
			</choose>
		where rnum between #{start} and #{end}
	</select>
	<select id="selectCampingCount" resultType="_int">
		select count(*) from camping
	</select>
	
	<insert id="insertCamping" parameterType="c">
		insert into camping values(camping_seq.nextval,'user01',#{campingTitle},#{campingContent},#{campingAddr},#{campingAddrDetail},#{campingPhone},#{filepath})
	</insert>
</mapper>
