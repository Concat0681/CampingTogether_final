<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="camping">
	<select id="selectCampingListData" parameterType="map" resultType="c">
		select * from
			(select 
				rownum as rnum,
				c.*,
				(select avg(camping_review_rating) from camping_review join camping using(camping_no) where camping_no = c.campingNo ) as avgReviewRating,
				(select max(camping_room_price) from camping_room join camping using(camping_no) where camping_no = c.campingNo) as maxRoomPrice
			from
				(select 
					camping_no as campingNo,
					member_id as memberId,
					camping_title as campingTitle,
					camping_content as campingContent,
					camping_sido as campingSido,
					camping_addr as campingAddr,
					camping_addr_detail as campingAddrDetail,
					camping_phone as campingPhone,
					filepath
				from camping)c
			<trim prefix="where" prefixOverrides="and|or">
				<if test="campingSido != null">
					 and campingSido like '%'||#{campingSido }||'%'
				</if>
				<if test="campingAddr != null">
					 and campingAddr like '%'||#{campingAddr}||'%'
				</if>
				<if test="campingRoomTypeList != null">
					 and campingNo in (select camping_no from camping_room where camping_room_type in
					<foreach collection="campingRoomTypeList" item="type" open="(" close=")" separator=",">
						 #{type}
					</foreach>
					)
				</if>
				<if test="campingEtcList != null">
					and campingNo in (select camping_no from camping_etc where camping_etc in
					<foreach collection="campingEtcList" item="etc" open="(" close=")" separator=",">
						 #{etc.campingEtc}
					</foreach>
					)
				</if>
				<if test="campingRoomServiceList != null">
					and campingNo in (select camping_no from camping_room_service where camping_room_service in
					<foreach collection="campingRoomServiceList" item="rs" open="(" close=")" separator=",">
						 #{rs.campingRoomService}
					</foreach>
					)
				</if>
				<if test="campingProvideServiceList != null">
					and campingNo in (select camping_no from camping_service where camping_service in
					<foreach collection="campingProvideServiceList" item="cps" open="(" close=")" separator=",">
						 #{cps.campingService}
					</foreach>
					)
				</if>
				<if test="pplCount != 0">
					and campingNo in (select camping_no from camping_room where camping_room_max_ppl_count <![CDATA[ >= ]]> #{pplCount} )
				</if>
			</trim>
		<choose>
			<when test="order.equals('avgReviewRating')">
				order by avgReviewRating desc nulls last)
			</when>
			<when test="order.equals('maxRoomPrice')">
				order by maxRoomPrice desc nulls last)
			</when>
		</choose>
	<if test="start != null">
		where rnum between #{start} and #{end}
	</if>
	</select>
	
	<select id="selectCampingCount" parameterType="map" resultType="_int">
			select count(*) from
				(select 
					camping_no,
					member_id,
					camping_title,
					camping_content,
					camping_addr,
					camping_addr_detail,
					camping_phone
				from camping
				<trim prefix="where" prefixOverrides="and|or">
					<if test="campingAddr != null">
						 camping_addr like '%'||#{campingAddr}||'%'
					</if>
					<if test="campingRoomTypeList != null">
						 and camping_no in (select camping_no from camping_room where camping_room_type in
						<foreach collection="campingRoomTypeList" item="type" open="(" close=")" separator=",">
							 #{type}
						</foreach>
						)
					</if>
					<if test="campingEtcList != null">
						and camping_no in (select camping_no from camping_etc where camping_etc in
						<foreach collection="campingEtcList" item="etc" open="(" close=")" separator=",">
							 #{etc.campingEtc}
						</foreach>
						)
					</if>
					<if test="campingRoomServiceList != null">
						and camping_no in (select camping_no from camping_room_service where camping_room_service in
						<foreach collection="campingRoomServiceList" item="rs" open="(" close=")" separator=",">
							 #{rs.campingRoomService}
						</foreach>
						)
					</if>
					<if test="campingProvideServiceList != null">
						and camping_no in (select camping_no from camping_service where camping_service in
						<foreach collection="campingProvideServiceList" item="cps" open="(" close=")" separator=",">
							 #{cps.campingService}
						</foreach>
						)
					</if>
					<if test="pplCount != 0">
						and camping_no in (select camping_no from camping_room where camping_room_max_ppl_count <![CDATA[ >= ]]> #{pplCount} )
					</if>
				</trim>
				)
	</select>
	
	<select id="selectOneCamping" parameterType="map" resultMap="getOneCamping">
		select 
			*
		from camping
		where camping_no = #{campingNo}
	</select>
	
	<select id="selectCampingProvideServiceList" parameterType="_int" resultType="cps">
		select
			camping_service_no as campingServiceNo,
			camping_no as campingNo,
			camping_service as campingService
		from camping_service where camping_no = #{_parameter}
	</select>
	
	<select id="getSellCampingList" parameterType="map" resultType="scl">
		select * from	
			(Select
				rownum as rnum,
		        c.camping_title,
		        c.camping_sido,
		        cr.camping_room_title,
		        (select filepath from camping_room_photo crp
		        where camping_room_photo_no =
		            (select min(camping_room_photo_no)
		            from camping_room_photo crp
		            where crp.camping_room_no = cr.camping_room_no)
		        )filepath
		    from camping c JOIN CAMPING_ROOM CR ON (C.CAMPING_NO = CR.CAMPING_NO)
		    WHERE MEMBER_ID = #{member_id})
		<if test="start != null">
			where rnum between #{start} and #{end}
		</if>
    	order by 1 desc;
	</select>
	
	<select id="selectCampingRoomServiceList" parameterType="_int" resultType="crs">
		select
			camping_room_service_no as campingRoomServiceNo,
			camping_no as campingNo,
			camping_room_service campingRoomService
		from camping_room_service where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingEtcList" parameterType="_int" resultType="ce">
		select
			camping_etc_no as campingEtcNo,
			camping_no as campingNo,
			camping_etc as campingEtc
		from camping_etc where camping_no = #{_parameter}
	</select>
	
	<resultMap type="c" id="getOneCamping">
		<result column="camping_no" property="campingNo"/>
		<result column="member_id" property="memberId"/>
		<result column="camping_title" property="campingTitle"/>
		<result column="camping_content" property="campingContent"/>
		<result column="camping_sido" property="campingSido"/>
		<result column="camping_addr" property="campingAddr"/>
		<result column="camping_addr_detail" property="campingAddrDetail"/>
		<result column="camping_phone" property="campingPhone"/>
		<result column="filepath" property="filepath"/>
		<collection property="campingProvideServiceList"
					select="selectCampingProvideServiceList"
					column="camping_no"
					ofType="cps"
					javaType="java.util.ArrayList"
		/>
		<collection property="campingRoomServiceList"
					select="selectCampingRoomServiceList"
					column="camping_no"
					ofType="crs"
					javaType="java.util.ArrayList"
		/>
		<collection property="campingEtcList"
					select="selectCampingEtcList"
					column="camping_no"
					ofType="ce"
					javaType="java.util.ArrayList"
		/>
	</resultMap>
	
	<select id="selectAllCampingRoomList" parameterType="_int" resultType="cr">
		select 
			camping_room_no as campingRoomNo,
			camping_room_title as campingRoomTitle,
 			camping_room_content campingRoomContent,
			camping_room_price as campingRoomPrice,
			camping_room_count as campingRoomCount,
			camping_room_max_ppl_count as campingRoomMaxPplCount,
			camping_room_type as campingRoomType
		from camping_room where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingRoomFileList" parameterType="_int" resultType="crf">
		select
			camping_room_photo_no as campingRoomPhotoNo,
			camping_room_no as campingRoomNo,
			filepath
		from camping_room_photo where camping_room_no = #{_parameter}
	</select>
	
	<insert id="insertCamping" parameterType="c">
		insert into camping values(camping_seq.nextval,'user01',#{campingTitle},#{campingContent},#{campingAddr},#{campingAddrDetail},#{campingPhone},#{filepath},#{campingSido})
		<selectKey resultType="_int" order="AFTER" keyProperty="campingNo">
			select max(camping_no) from camping
		</selectKey>
	</insert>
	
	
	<insert id="insertCampingRoom" parameterType="cr">
		insert into camping_room values(camping_room_seq.nextval,#{campingNo},#{campingRoomContent},#{campingRoomPrice},#{campingRoomCount},#{campingRoomMaxPplCount},#{campingRoomTitle},#{campingRoomType})
		<selectKey resultType="_int" order="AFTER" keyProperty="campingRoomNo">
			select max(camping_room_no) from camping_room
		</selectKey>
	</insert>
	
	<insert id="insertCampingRoomPhoto" parameterType="crf">
		insert into camping_room_photo values(camping_room_photo_seq.nextval,#{campingRoomNo},#{filepath})
	</insert>
	
	<insert id="insertCampingProvideService" parameterType="cps">
		insert into camping_service values(camping_service_seq.nextval,#{campingNo},#{campingService})
	</insert>
	
	<insert id="insertCampingRoomService" parameterType="crs">
		insert into camping_room_service values(camping_room_service_seq.nextval,#{campingNo},#{campingRoomService})
	</insert>
	
	<insert id="insertCampingEtc" parameterType="ce">
		insert into camping_etc values(camping_etc_seq.nextval,#{campingNo},#{campingEtc})
	</insert>
	
	<insert id="insertCampingReview" parameterType="crv">
		insert into camping_review values(camping_review_seq.nextval,#{campingNo},'user01',#{campingReviewTitle},#{campingReviewContent},#{campingReviewRating},null,to_char(sysdate,'yyyy-mm-dd hh24:mi'))
		<selectKey resultType="_int" order="AFTER" keyProperty="campingReviewNo">
			select max(camping_review_no) from camping_review
		</selectKey>
	</insert>
	
	<insert id="insertCampingReviewPhoto" parameterType="crvf">
		insert into camping_review_photo values(camping_review_photo_seq.nextval,#{campingReviewNo},#{filepath})
	</insert>
	
	<select id="selectCampingReview" parameterType="_int" resultType="crv">
		select
			camping_review_no as campingReviewNo,
			camping_no as campingNo,
			member_id as memberId,
			camping_review_title as campingReviewTitle,
			camping_review_content as campingReviewContent,
			camping_review_rating as campingReviewRating,
			camping_review_ref as campingReviewRef
		from camping_review where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingReviewNo" parameterType="_int" resultType="_int">
		select camping_review_no from camping_review where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingReviewPhoto" parameterType="_int" resultType="crvf">
		select
			camping_review_photo_no as campingReviewPhotoNo,
			camping_review_no as campingReviewNo,
			filepath
		from camping_review_photo where camping_review_no = #{_parameter}
	</select>
	
	<insert id="insertReviewComment" parameterType="crv">
		insert into camping_review values(camping_review_seq.nextval,#{campingNo},#{memberId},'reviewcomment',#{campingReviewContent},null,#{campingReviewRef})
	</insert>
</mapper>
