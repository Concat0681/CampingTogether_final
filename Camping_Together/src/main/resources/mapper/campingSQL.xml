<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="camping">
	<select id="selectCampingListData" parameterType="map" resultType="c">
		select * from
			(select 
				rownum as rnum,
				c.*,
				(select avg(camping_review_rating) from camping_review join camping using(camping_no) where camping_no = c.campingNo ) as avgReviewRating,
				(select max(camping_room_price) from camping_room join camping using(camping_no) where camping_no = c.campingNo) as maxRoomPrice
				<if test="memberId != null">
					, (select b.camping_bookmark_no as campingBookmarkNo from camping_bookmark b join camping a on(b.camping_no = a.camping_no) where b.camping_no = c.campingNo and b.member_id = #{memberId}) as campingBookmarkNo
				</if>
			from
				(select 
					camping_no as campingNo,
					member_id as memberId,
					camping_title as campingTitle,
					camping_content as campingContent,
					camping_sido as campingSido,
					camping_addr as campingAddr,
					camping_addr_detail as campingAddrDetail,
					camping_phone as campingPhone,
					filepath
				from camping)c
			<trim prefix="where" prefixOverrides="and|or">
				<if test="campingSido != null">
					<choose>
						<when test="campingSido == '경기'">
						    and campingSido like '%'||#{campingSido }||'%'
							or campingSido like '%'||'인천'||'%'
							or campingSido like '%'||'서울'||'%'
						</when>
						<when test="campingSido == '충청'">
						    and campingSido like '%'||'충'||'%'
							or campingSido like '%'||'세종'||'%'
							or campingSido like '%'||'대전'||'%'
						</when>
						<when test="campingSido == '경상'">
						    and campingSido like '%'||'경북'||'%'
						    or campingSido like '%'||'경남'||'%'
							or campingSido like '%'||'대구'||'%'
							or campingSido like '%'||'울산'||'%'
							or campingSido like '%'||'부산'||'%'
						</when>
						<when test="campingSido == '전라'">
						    and campingSido like '%'||'전'||'%'
							or campingSido like '%'||'광주'||'%'
						</when>
						<otherwise>
							 and campingSido like '%'||#{campingSido }||'%'
						</otherwise>
					</choose>
				</if>
				<if test="campingAddr != null">
					 and campingAddr like '%'||#{campingAddr}||'%'
				</if>
				<if test="campingRoomTypeList != null">
					 and campingNo in (select camping_no from camping_room where camping_room_type in
					<foreach collection="campingRoomTypeList" item="type" open="(" close=")" separator=",">
						 #{type}
					</foreach>
					)
				</if>
				<if test="campingEtcList != null">
					and campingNo in (select camping_no from camping_etc where camping_etc in
					<foreach collection="campingEtcList" item="etc" open="(" close=")" separator=",">
						 #{etc.campingEtc}
					</foreach>
					)
				</if>
				<if test="campingRoomServiceList != null">
					and campingNo in (select camping_no from camping_room_service where camping_room_service in
					<foreach collection="campingRoomServiceList" item="rs" open="(" close=")" separator=",">
						 #{rs.campingRoomService}
					</foreach>
					)
				</if>
				<if test="campingProvideServiceList != null">
					and campingNo in (select camping_no from camping_service where camping_service in
					<foreach collection="campingProvideServiceList" item="cps" open="(" close=")" separator=",">
						 #{cps.campingService}
					</foreach>
					)
				</if>
				<if test="pplCount != 0">
					and campingNo in (select camping_no from camping_room where camping_room_max_ppl_count <![CDATA[ >= ]]> #{pplCount} )
				</if>
			</trim>
		<choose>
			<when test="order.equals('avgReviewRating')">
				order by avgReviewRating desc nulls last)
			</when>
			<when test="order.equals('maxRoomPrice')">
				order by maxRoomPrice desc nulls last)
			</when>
			<when test="order.equals('new')">
				order by 1 desc)
			</when>
		</choose>
	<if test="start != null">
		where rnum between #{start} and #{end}
	</if>
	</select>
	
	<select id="selectCampingCount" parameterType="map" resultType="_int">
			select count(*) from
				(select 
					camping_no,
					member_id,
					camping_title,
					camping_content,
					camping_addr,
					camping_addr_detail,
					camping_phone
				from camping
				<trim prefix="where" prefixOverrides="and|or">
					<if test="campingAddr != null">
						 camping_addr like '%'||#{campingAddr}||'%'
					</if>
					<if test="campingRoomTypeList != null">
						 and camping_no in (select camping_no from camping_room where camping_room_type in
						<foreach collection="campingRoomTypeList" item="type" open="(" close=")" separator=",">
							 #{type}
						</foreach>
						)
					</if>
					<if test="campingEtcList != null">
						and camping_no in (select camping_no from camping_etc where camping_etc in
						<foreach collection="campingEtcList" item="etc" open="(" close=")" separator=",">
							 #{etc.campingEtc}
						</foreach>
						)
					</if>
					<if test="campingRoomServiceList != null">
						and camping_no in (select camping_no from camping_room_service where camping_room_service in
						<foreach collection="campingRoomServiceList" item="rs" open="(" close=")" separator=",">
							 #{rs.campingRoomService}
						</foreach>
						)
					</if>
					<if test="campingProvideServiceList != null">
						and camping_no in (select camping_no from camping_service where camping_service in
						<foreach collection="campingProvideServiceList" item="cps" open="(" close=")" separator=",">
							 #{cps.campingService}
						</foreach>
						)
					</if>
					<if test="pplCount != 0">
						and camping_no in (select camping_no from camping_room where camping_room_max_ppl_count <![CDATA[ >= ]]> #{pplCount} )
					</if>
				</trim>
				)
	</select>
	
	<select id="selectSellCampingCount" parameterType="map" resultType="_int">
		select count(camping_no) from camping where member_id = #{memberId}
	</select>
	
	<select id="selectOneCamping" parameterType="map" resultMap="getOneCamping">
	select 
	c.*
	<if test="memberId != null">
		, (select b.camping_bookmark_no as campingBookmarkNo from camping_bookmark b join camping a on(b.camping_no = a.camping_no) where b.camping_no = #{campingNo} and b.member_id = #{memberId}) as campingBookmarkNo
	</if>
	from
		(select 
				*
		from camping
		where camping_no = #{campingNo}) c
	</select>
	
	<select id="selectCampingProvideServiceList" parameterType="_int" resultType="cps">
		select
			camping_service_no as campingServiceNo,
			camping_no as campingNo,
			camping_service as campingService
		from camping_service where camping_no = #{_parameter}
	</select>
	
	<select id="getSellCampingList" parameterType="map" resultType="scl" resultMap="getSellCampingList">
		select * from	
			(Select
				c.*,
				rownum as rnum,
				(select count(camping_room_no) from camping left join camping_room using(camping_no) where camping_no = c.camping_no ) as rct 
		    from camping c
		    WHERE MEMBER_ID = #{memberId}
		    order by 1 desc)
		<if test="start != null">
			where rnum between #{start} and #{end}
		</if>
	</select>
	
	
	<select id="selectCampingRoomServiceList" parameterType="_int" resultType="crs">
		select
			camping_room_service_no as campingRoomServiceNo,
			camping_no as campingNo,
			camping_room_service campingRoomService
		from camping_room_service where camping_no = #{_parameter}
	</select>
	
	
	<resultMap type="scl" id="getSellCampingList">
		<result column="camping_no" property="campingNo"/>
		<result column="member_id" property="memberId"/>
		<result column="camping_title" property="campingTitle"/>
		<result column="camping_sido" property="campingSido"/>
		<result column="filepath" property="filepath"/>
		<collection property="campingRoomList"
					select="selectAllCampingRoomList"
					column="camping_no"
					ofType="cr"
					javaType="java.util.ArrayList"
		/>
	</resultMap>
	
	<select id="selectCampingEtcList" parameterType="_int" resultType="ce">
		select
			camping_etc_no as campingEtcNo,
			camping_no as campingNo,
			camping_etc as campingEtc
		from camping_etc where camping_no = #{_parameter}
	</select>
	
	<resultMap type="c" id="getOneCamping">
		<result column="camping_no" property="campingNo"/>
		<result column="member_id" property="memberId"/>
		<result column="camping_title" property="campingTitle"/>
		<result column="camping_content" property="campingContent"/>
		<result column="camping_sido" property="campingSido"/>
		<result column="camping_addr" property="campingAddr"/>
		<result column="camping_addr_detail" property="campingAddrDetail"/>
		<result column="camping_phone" property="campingPhone"/>
		<result column="filepath" property="filepath"/>
		<collection property="campingProvideServiceList"
					select="selectCampingProvideServiceList"
					column="camping_no"
					ofType="cps"
					javaType="java.util.ArrayList"
		/>
		<collection property="campingRoomServiceList"
					select="selectCampingRoomServiceList"
					column="camping_no"
					ofType="crs"
					javaType="java.util.ArrayList"
		/>
		<collection property="campingEtcList"
					select="selectCampingEtcList"
					column="camping_no"
					ofType="ce"
					javaType="java.util.ArrayList"
		/>
	</resultMap>
	
	<select id="selectAllCampingRoomList" parameterType="_int" resultType="cr">
		select 
			camping_room_no as campingRoomNo,
			camping_room_title as campingRoomTitle,
 			camping_room_content campingRoomContent,
			camping_room_price as campingRoomPrice,
			camping_room_count as campingRoomCount,
			camping_room_max_ppl_count as campingRoomMaxPplCount,
			camping_room_type as campingRoomType
		from camping_room where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingRoomFileList" parameterType="_int" resultType="crf">
		select
			camping_room_photo_no as campingRoomPhotoNo,
			camping_room_no as campingRoomNo,
			filepath
		from camping_room_photo where camping_room_no = #{_parameter}
	</select>
	
	<insert id="insertCamping" parameterType="c">
		insert into camping values(camping_seq.nextval,#{memberId},#{campingTitle},#{campingContent},#{campingAddr},#{campingAddrDetail},#{campingPhone},#{filepath},#{campingSido})
		<selectKey resultType="_int" order="AFTER" keyProperty="campingNo">
			select max(camping_no) from camping
		</selectKey>
	</insert>
	
	
	<insert id="insertCampingRoom" parameterType="cr">
		insert into camping_room values(camping_room_seq.nextval,#{campingNo},#{campingRoomContent},#{campingRoomPrice},#{campingRoomCount},#{campingRoomMaxPplCount},#{campingRoomTitle},#{campingRoomType})
		<selectKey resultType="_int" order="AFTER" keyProperty="campingRoomNo">
			select max(camping_room_no) from camping_room
		</selectKey>
	</insert>
	
	<insert id="insertCampingRoomPhoto" parameterType="crf">
		insert into camping_room_photo values(camping_room_photo_seq.nextval,#{campingRoomNo},#{filepath})
	</insert>
	
	<insert id="insertCampingProvideService" parameterType="cps">
		insert into camping_service values(camping_service_seq.nextval,#{campingNo},#{campingService})
	</insert>
	
	<insert id="insertCampingRoomService" parameterType="crs">
		insert into camping_room_service values(camping_room_service_seq.nextval,#{campingNo},#{campingRoomService})
	</insert>
	
	<insert id="insertCampingEtc" parameterType="ce">
		insert into camping_etc values(camping_etc_seq.nextval,#{campingNo},#{campingEtc})
	</insert>
	
	<insert id="insertCampingReview" parameterType="crv">
		insert into camping_review values(camping_review_seq.nextval,#{campingNo},#{memberId},#{campingReviewTitle},#{campingReviewContent},#{campingReviewRating},null,to_char(sysdate,'yyyy-mm-dd hh24:mi'))
		<selectKey resultType="_int" order="AFTER" keyProperty="campingReviewNo">
			select max(camping_review_no) from camping_review
		</selectKey>
	</insert>
	
	<insert id="insertCampingReviewPhoto" parameterType="crvf">
		insert into camping_review_photo values(camping_review_photo_seq.nextval,#{campingReviewNo},#{filepath})
	</insert>
	
	<select id="selectCampingReview" parameterType="_int" resultType="crv">
		select
			camping_review_no as campingReviewNo,
			camping_no as campingNo,
			member_id as memberId,
			camping_review_title as campingReviewTitle,
			camping_review_content as campingReviewContent,
			camping_review_rating as campingReviewRating,
			camping_review_ref as campingReviewRef
		from camping_review where camping_no = #{_parameter} and camping_review_ref is null order by camping_review_no 
	</select>
	
	<select id="selectCampingReviewNo" parameterType="_int" resultType="_int">
		select camping_review_no from camping_review where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingReviewPhoto" parameterType="_int" resultType="crvf">
		select
			camping_review_photo_no as campingReviewPhotoNo,
			camping_review_no as campingReviewNo,
			filepath
		from camping_review_photo where camping_review_no = #{_parameter}
	</select>
	
	<insert id="insertReviewComment" parameterType="crv">
		insert into camping_review values(camping_review_seq.nextval,#{campingNo},#{memberId},'reviewcomment',#{campingReviewContent},null,#{campingReviewRef},to_char(sysdate,'yyyy-mm-dd hh24:mi'))
	</insert>
	
	<select id="selectReviewCommentList" parameterType="_int" resultType="crv">
		select
			camping_review_no as campingReviewNo,
			camping_no as campingNo,
			member_id as memberId,
			camping_review_title as campingReviewTitle,
			camping_review_content as campingReviewContent,
			camping_review_rating as campingReviewRating,
			camping_review_ref as campingReviewRef
		from camping_review where camping_no = #{_parameter} and camping_review_ref is not null
	</select>
	
	<select id="selectCampingReviewFile" parameterType="_int" resultType="crvf">
		select * from camping_review_photo where camping_review_no = #{_parameter}
	</select>
	
	<delete id="deleteCampingReview" parameterType="_int">
		delete from camping_review where camping_review_no=#{_parameter}
	</delete>
	
	<delete id="deleteCampingReviewComment" parameterType="_int">
		delete from camping_review where camping_review_no=#{_parameter}
	</delete>
	
	<update id="updateReviewComment" parameterType="crv">
		update camping_review set camping_review_content=#{campingReviewContent} where camping_review_no=#{campingReviewNo}
	</update>
	
	<select id="selectReviewCount" parameterType="_int" resultType="_int">
		select count(*) from camping_review where camping_no=#{_parameter}
	</select>
	
	<select id="selectReviewCommentCount" parameterType="_int" resultType="_int">
		select count(*) from camping_review where camping_review_ref is not null and camping_no=#{_parameter}
	</select>
	
	<select id="selectcampingReviewRatingAvg" parameterType="_int" resultType="_int">
		select nvl(avg(camping_review_rating),0) from camping_review where camping_no=#{_parameter}
	</select>
	
	<select id="getReviewInfo" parameterType="_int" resultType="crv">
		select
			camping_review_no as campingReviewNo,
			camping_no as campingNo,
			member_id as memberId,
			camping_review_title as campingReviewTitle,
			camping_review_content as campingReviewContent,
			camping_review_rating as campingReviewRating,
			camping_review_ref as campingReviewRef
 		from camping_review where camping_review_no=#{_parameter}
	</select>
	
	<select id="getReviewFile" parameterType="_int" resultType="crvf">
		select 
			camping_review_photo_no as campingReviewPhotoNo,
			camping_review_no as campingReviewNo,
			filepath
		from camping_review_photo where camping_review_no = #{_parameter}
	</select>
	
	<update id="updateCampingReview" parameterType="crv">
		update camping_review set camping_review_title=#{campingReviewTitle}, camping_review_content=#{campingReviewContent}, camping_review_rating=#{campingReviewRating} where camping_review_no=#{campingReviewNo}
	</update>
	
	
	<delete id="deleteCampingReviewFile" parameterType="_int">
		delete from camping_review_photo where camping_review_photo_no=#{no}
	</delete>
	
	<select id="selectCampingRoomFile" parameterType="_int" resultType="crf">
		select
			camping_room_photo_no as campingRoomPhotoNo,
			camping_room_no as campingRoomNo,
			filepath
		from camping_room_photo where camping_room_no = #{_parameter}
	</select>
	
	<delete id="deleteCampingRoom" parameterType="_int">
		delete from camping_room where camping_room_no=#{_parameter}
	</delete>
	
	<select id="selectCampingRoom" parameterType="_int" resultType="cr">
		select 
			camping_room_no as campingRoomNo,
			camping_no as campingNo,
			camping_room_title as campingRoomTitle,
 			camping_room_content campingRoomContent,
			camping_room_price as campingRoomPrice,
			camping_room_count as campingRoomCount,
			camping_room_max_ppl_count as campingRoomMaxPplCount,
			camping_room_type as campingRoomType
		from camping_room where camping_room_no = #{_parameter}
	</select> 
	
	<update id="updateCampingRoom" parameterType="cr">
		update camping_room set
			camping_room_content = #{campingRoomContent},
			camping_room_price = #{campingRoomPrice},
			camping_room_max_ppl_count = #{campingRoomMaxPplCount},
			camping_room_title = #{campingRoomTitle},
			camping_room_type = #{campingRoomType}
		where camping_room_no = #{campingRoomNo}
	</update>
	
	<delete id="deleteCampingRoomFile" parameterType="_int">
		delete from camping_room_photo where camping_room_photo_no=#{no}
	</delete>
	
	<delete id="deleteCamping" parameterType="_int">
		delete from camping where camping_no=#{campingNo}
	</delete>
	
	<insert id="insertCampingReservation" parameterType="map">
		insert into camping_reservation values(camping_reservation_seq.nextval, #{memberNo}, #{campingRoomNo}, #{checkIn}, #{checkOut},2)
	</insert>
	<insert id="insertCamingPayment" parameterType="_int">
		insert into camping_payment values(camping_payment_seq.nextval,#{_parameter},to_char(sysdate,'yyyy-mm-dd hh24:mi:ss'),1)
		<!-- 정규화가 이루어져있어 외래키로 연결되어있을 경우 selectKey를 사용하면 별도의 select를 진행하지 않아도된다. -->
		<!-- key값을 다시 조회할건데 해당태그(현재insert)가 동작하고나면 조회할 때 -->
<!-- 		<selectKey resultType="_int" order="AFTER" keyProperty="reservationNo"> -->
			<!-- order:insert문 이후에 실행, keyProperty: boardNo변수에 넣어줄것 --> 
<!-- 			select max(camping_reservation_no) from camping_reservation -->
<!-- 		</selectKey> -->
	</insert>
	<select id="selectcampingReservationNo" parameterType="_int" resultType="_int">
		select max(camping_reservation_no) from camping_reservation where member_no = #{_parameter}
	</select>
	<select id="campingPaymentDate" parameterType="_int" resultType="cpay">
		select camping_payment_date as campingPaymentDate from camping_payment where camping_reservation_no = #{_parameter}
	</select>
	<select id="selectRoomMemberNo" parameterType="_int" resultType="cre">
		select 
		camping_room_no as campingRoomNo,
		check_in as checkIn,
		check_out as checkOut
		from camping_reservation where camping_room_no = #{_parameter}
	</select>
	<select id="selectReservationList" parameterType="cre" resultType="cre">
		select
			camping_reservation_no as campingReservationNo,
			member_no as memberNo,
			camping_room_no as campingRoomNo,
			check_in as checkIn,
			check_out as checkOut 
		from camping_reservation
		
		where (check_in between #{checkIn} and #{checkOut}) and (camping_room_no = #{campingRoomNo})
	</select>
	<select id="selectReservation" parameterType="cre" resultType="cre">
		select
			camping_reservation_no as campingReservationNo,
			member_no as memberNo,
			camping_room_no as campingRoomNo,
			check_in as checkIn,
			check_out as checkOut 
			from camping_reservation
		where camping_room_no = #{campingRoomNo}
	</select>
<!-- 	<select id="selectCampingRoom" parameterType="c" resultType="cr"> -->
<!-- 		select -->
<!-- 			camping_room_no as campingRoomNo -->
<!-- 		where camping_no = #{campingNo} -->
<!-- 	</select> -->

	<select id="selectLatestBookmarkNo" resultType="_int">
		select max(camping_bookmark_no) from camping_bookmark
	</select>

	<insert id="insertCampingBookmark" parameterType="map">
		insert into camping_bookmark values(
			camping_bookmark_seq.nextval, #{campingNo}, #{memberId}
		)
	</insert>
	
	<delete id="deleteCampingBookmark" parameterType="_int">
		delete from camping_bookmark where camping_bookmark_no = #{_parameter}
	</delete>
	
	<select id="selectUpdateCamping" parameterType="_int" resultType="c">
		select 
			camping_no as campingNo,
			member_id as memberId,
			camping_title as campingTitle,
			camping_content as campingContent,
			camping_addr as campingAddr,
			camping_addr_detail as campingAddrDetail,
			camping_phone as campingPhone,
			camping_sido as campingSido,
			filepath
		from camping where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingEtc" parameterType="_int" resultType="ce">
		select
			camping_etc_no as campingEtcNo,
			camping_no as campingNo,
			camping_etc as campingEtc
		from camping_etc where camping_no = #{_parameter}
	</select>
	
	<select id="selectCampingService" parameterType="_int" resultType="cps">
		select
			camping_service_no as campingServiceNo,
			camping_no as campingNo,
			camping_service as campingService
		from camping_service where camping_no = ${_parameter}
	</select>
	
	<select id="selectCampingRoomService" parameterType="_int" resultType="crs">
		select
			camping_room_service_no as campingRoomServiceNo,
			camping_no as campingNo,
			camping_room_service as campingRoomService
		from camping_room_service where camping_no = #{_parameter}
	</select>
	
	<update id="updateCamping" parameterType="c">
		update camping set 
				camping_title=#{campingTitle},
				camping_content=#{campingContent}, 
				camping_addr=#{campingAddr}, 
				camping_addr_detail=#{campingAddrDetail}, 
				camping_phone=#{campingPhone}, 
				filepath = case
                        when #{filepath} is null then filepath
                        else #{filepath}
                    		end, 
				camping_sido=#{campingSido}
			where camping_no = ${campingNo}
	</update>
	
	<update id="updateCampingProvideService" parameterType="cps">
		update camping_service set
			camping_service = #{campingService}
		where camping_no = #{campingNo}
	</update>
	
	<update id="updateCampingRoomService" parameterType="crs">
		update camping_room_service set
			camping_room_service = #{campingRoomService}
		where camping_no = #{campingNo}
	</update>
	
	<update id="updateCampingEtc" parameterType="ce">
		update camping_etc set
			camping_etc = #{campingEtc}
		where camping_no = #{campingNo}
	</update>
	
	<delete id="deleteCampingProvideService" parameterType="_int">
		delete from camping_service where camping_no=#{_parameter}
	</delete>
	
	<delete id="deleteCampingRoomService" parameterType="_int">
		delete from camping_room_service where camping_no=#{_parameter}
	</delete>
	
	<delete id="deleteCampingEtc" parameterType="_int">
		delete from camping_etc where camping_no=#{_parameter}
	</delete>
	
	<select id="selectDeleteCampingRoomFileList" parameterType="_int" resultType="crf">
		select
			 camping_room_photo_no as campingRoomPhotoNo,
			 camping_room_no as campingRoomNo,
			 filepath 
		 from camping_room_photo where camping_room_no in (select camping_room_no from camping_room where camping_no=#{_parameter})
	</select>
	
	<select id="selectDeleteCamping" parameterType="_int" resultType="c">
		select
			camping_no as campingNo,
			member_id as memberId,
			camping_title as campingTitle,
			camping_content as campingContent,
			camping_sido as campingSido,
			camping_addr as campingAddr,
			camping_addr_detail as campingAddrDetail,
			camping_phone as campingPhone,
			filepath
		from camping where camping_no=#{_parameter}
	</select>
</mapper>
