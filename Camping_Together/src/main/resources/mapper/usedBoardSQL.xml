<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="usedBoard">
	<insert id="insertUesdBoard" parameterType="ub">
		insert into used_board 
		values(
			  used_board_seq.nextval, 
			  #{usedBoardWriter}, 
			  #{usedBoardTitle}, 
			  #{usedBoardContent}, 
			  #{usedBoardCategory}, 
			  0, 
			  #{usedProductStatus}, 
			  #{exchangeStatus}, 
			  #{usedProductPrice},
			  0, 
			  #{usedTradeLocation}, 
			  0, 
			  to_char(sysdate, 'yyyy-mm-dd')
			  )
		<selectKey resultType="_int" order="AFTER" keyProperty="usedBoardNo">
				<!-- order:insert문 이후에 실행, keyProperty: boardNo변수에 넣어줄것 -->
				select max(used_board_no) from used_board
		</selectKey>
	</insert>
	<insert id="insertUesdPhoto" parameterType="ubp">
		insert into used_photo 
		values(used_file_seq.nextval, #{usedBoardNo}, #{filepath})
	</insert>
	<select id="selectUsedBoardList" parameterType="map" resultType="ub">
		select *
		from
		    (select rownum as rnum, ub.* from 
		        (select 
		            used_board.used_board_no as usedBoardNo,
		            used_board_title as usedBoardTitle,
		            used_board_writer as usedBoardWriter,
		            used_board_status as usedBoardStatus,
		            used_product_price as usedProductPrice,
		            used_trade_location as usedTradeLocation,
		            read_count as readCount,
		            reg_date as regDate,
		            filepath as thumbnail,
		            (select count(*) from used_wish_list where used_board.used_board_no = used_wish_list.used_board_no and member_id = #{memberId}) as wishChk
		        from used_board
		        left join (select used_board.used_board_no, max(filepath) as filepath from used_board left join used_photo on used_board.used_board_no = used_photo.used_board_no group by used_board.used_board_no)B
		        on used_board.used_board_no = B.used_board_no
		        <if test="usedBoardWriter != null ">
		        	where used_board_writer = #{usedBoardWriter}
		        </if>
		        order by 1 desc)ub)
		where rnum between #{start} and #{end}
	</select>
	<select id="totalCount" parameterType="string" resultType="_int">
		select count(*) from used_board
		<if test="_parameter != null">
			where used_board_writer = #{_parameter}
		</if>
	</select>
	<update id="updateReadCount" parameterType="_int">
		update used_board set read_count = read_count + 1 where used_board_no = #{_parameter}
	</update>
	<select id="selectOneUsedBoard" parameterType="_int" resultType="ub">
		select 
			used_board_no as usedBoardNo,
			used_board_writer as usedBoardWriter,
			used_Board_Title as usedBoardTitle,
			used_board_content as usedBoardContent,
			used_board_category as usedBoardCategory,
			used_board_status as usedBoardStatus,
			used_product_status as usedProductStatus,
			exchange_status as exchangeStatus,
			used_product_price as usedProductPrice,
			used_delivery_status as usedDeliveryStatus,
			used_trade_location as usedTradeLocation,
			read_count as readCount,
			reg_date as regDate,
			(select count(*) from used_wish_list where used_board_no = #{_parameter}) as wishChk
		from used_board
		where used_board_no = #{_parameter}
	</select>
	
	<select id="selectUsedPhoto" parameterType="_int" resultType="ubp">
		select
			fileno as fileNo,
			filepath as filepath
		from used_photo
		where used_board_no = #{_parameter}
	</select>
	
	<insert id="insertUsedBoardComment" parameterType="ubc">
		insert into used_board_comment values(used_board_comment_seq.nextval, #{usedBoardNo}, #{usedBoardCommentWriter}, #{usedBoardCommentContent}, to_char(sysdate, 'yyyy-mm-dd hh24:mi:ss'))
	</insert>
	
	<select id="selectCommentList" parameterType="_int" resultType="ubc">
		select 
			used_board_comment_no as usedBoardCommentNo,
			used_board_no as usedBoardNo,
			used_board_comment_writer as usedBoardCommentWriter,
			used_board_comment_content as usedBoardCommentContent,
			reg_date as regDate
		from used_board_comment
		where used_board_no = #{_parameter}
		order by 1
	</select>
	<select id="commentCount" parameterType="_int" resultType="_int">
		select count(*) from used_board_comment where used_board_no = #{_parameter}
	</select>
	<update id="updateUsedBoardComment" parameterType="ubc">
		update used_board_comment set used_board_comment_content = #{usedBoardCommentContent} where used_board_comment_no = #{usedBoardCommentNo}
	</update>
	<delete id="deleteUsedBoardComment" parameterType="_int">
		delete from used_board_comment where used_board_comment_no = #{_parameter}
	</delete>
	<select id="sellUserCheck" parameterType="string" resultType="ub">
	   select 
	           member_phone as sellerPhone,
	           profile_filepath as profilePath
	   from member 
	   left join profile using(member_no)
	   where member_id like #{_parameter}
	</select>
	<select id="sellerBlackCount" parameterType="string" resultType="_int">
		select count(*)
		from blacklist
		where blacklist_status = 1 and blacklist_member_id like #{_parameter}
	</select>
	<delete id="deleteUsedBoard" parameterType="_int">
		delete from used_Board where used_board_no = #{_parameter}
	</delete>
	
	<!-- 중고게시글 업데이트 -->
	<update id="updateUsedBoard" parameterType="ub">
		update used_board set 
			used_board_title = #{usedBoardTitle},
			used_board_content = #{usedBoardContent},
			used_board_category = #{usedBoardCategory},
			used_product_status = #{usedProductStatus},
			exchange_status = #{exchangeStatus},
			used_product_price = #{usedProductPrice},
			used_trade_location = #{usedTradeLocation}
		where
			used_board_no = #{usedBoardNo}
	</update>
	<delete id="deleteFile" parameterType="_int">
		delete from used_photo where fileno = #{_parameter}
	</delete>
	<!-- 중고거래 판매상태 업데이트 -->
	<update id="updateUsedBoardStatus" parameterType="_int">
		update used_board set used_board_status = 1 where used_board_no = #{_parameter}
	</update>
	<!-- 메인페이지 중고 거래 조회수 상위 3개 리스트 -->
	<select id="getTop3UsedBoards" resultType="ub">	
		<![CDATA[
		SELECT *
			FROM (select 
		            used_board.used_board_no as usedBoardNo,
		            used_board_title as usedBoardTitle,
		            used_board_status as usedBoardStatus,
		            used_product_price as usedProductPrice,
		            used_trade_location as usedTradeLocation,
		            read_count as readCount,
		            reg_date as regDate,
		            filepath as thumbnail
		        from used_board 
		        left join (select used_board.used_board_no, max(filepath) as filepath from used_board left join used_photo on used_board.used_board_no = used_photo.used_board_no group by used_board.used_board_no)B
		        on used_board.used_board_no = B.used_board_no
		        where used_board_status = 0
		        order by read_count DESC)
		where rownum <= 3 
		]]>
	</select>
	<insert id="insertUsedWishList" parameterType="uwl">
		insert into used_wish_list 
		values(
			used_wish_list_seq.nextval,
			#{usedBoardNo},
			#{memberId}
		)
	</insert>
	<delete id="deleteUsedWishList" parameterType="uwl">
		delete from used_wish_list where member_id = #{memberId} and used_board_no = #{usedBoardNo}
	</delete>
	<select id="selectAllWishBoard" parameterType="string" resultType="ub">
		select 
			ub.used_board_no as usedBoardNo,
			used_board_title as usedBoardTitle,
			used_board_status as usedBoardStatus,
			reg_date as regDate,
			used_board_writer as usedBoardWriter
		from used_board ub join used_wish_list uwl on ub.used_board_no = uwl.used_board_no
		where uwl.member_id = #{_parameter}
		order by 1 desc
	</select>
</mapper>









